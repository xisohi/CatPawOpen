name: 猫源

on:
  schedule:
    - cron: '0 8 * * *'  # 每天8点触发
  workflow_dispatch:
    inputs:
      rebuild:
        description: '忽略构建记录以重新构建'
        required: false
        type: boolean
      donotpublish:
        description: '构建后不提交发布新版'
        required: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - userName: xisohi
            repoName: CatPawOpen
            branchName: main
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check New Commit
        id: check_commit
        run: |
          # 获取最新提交的SHA值
          commitSHA=$(curl -sL "https://api.github.com/repos/${{ matrix.userName }}/${{ matrix.repoName }}/commits/${{ matrix.branchName }}" | jq -r '.sha')
          if [ $? -ne 0 ]; then
            echo "Failed to get commit from API"
            exit 1
          fi
          echo "commitSHA=$commitSHA" >> $GITHUB_ENV

          # 获取所有发布标签中的SHA值
          releaseList=$(curl -s "https://api.github.com/repos/${{ matrix.userName }}/${{ matrix.repoName }}/tags")
          if echo "$releaseList" | jq -r '.[] | .commit.sha' | grep -q "$commitSHA"; then
            echo "Latest commit SHA already exists in tags. Exiting workflow."
            echo "run_steps=false" >> $GITHUB_ENV
            exit 0
          else
            echo "New commit detected. Proceeding with further steps..."
            echo "run_steps=true" >> $GITHUB_ENV
          fi

      - name: Set up Node.js
        if: ${{ env.run_steps == 'true' }}
        uses: actions/setup-node@v3
        with:
          node-version: 18.17.1

      - name: Run npm build
        if: ${{ env.run_steps == 'true' }}
        working-directory: nodejs
        run: |
          npm i
          npm run build

      - name: Archive dist
        if: ${{ env.run_steps == 'true' }}
        run: |
          cd nodejs/dist
          zip -r cat.zip .  # 打包 nodejs/dist 文件夹内的所有文件
          mv cat.zip ../  # 将生成的 cat.zip 移动到 nodejs 目录下

      - name: Upload cat.zip
        if: ${{ env.run_steps == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: cat.zip
          path: nodejs/cat.zip  # 指定上传 cat.zip 文件

      - name: Set TAG_NAME environment variable
        if: ${{ env.run_steps == 'true' }}
        run: |
          echo "TAG_NAME=$(date -u +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV

      - name: Create Release and Upload Artifact
        if: ${{ env.run_steps == 'true' }}
        uses: softprops/action-gh-release@v1
        with:
          files: nodejs/cat.zip  # 指定上传 cat.zip 文件
          tag_name: ${{ env.TAG_NAME }}  # 使用构建时间作为标签
          name: ${{ github.ref_name }} Release  # Release 名称
          body: "Automated release from ${{ github.ref_name }} branch at ${{ env.TAG_NAME }}"  # Release 描述
          token: ${{ secrets.GITHUB_TOKEN }}  # 使用 GitHub Token 进行身份验证
